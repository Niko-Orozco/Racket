/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package View;

import javax.swing.ImageIcon;

/**
 *
 * @author ALEJO
 */
public class FundamentosFuncional extends javax.swing.JFrame {

    /**
     * Creates new form FundamentosFuncional
     */
    public FundamentosFuncional() {
        initComponents();
        this.setIconImage(new ImageIcon(getClass().getResource("/Images/racket-icon.png")).getImage());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        salir = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(237, 236, 236));
        jPanel1.setLayout(null);

        jScrollPane1.setToolTipText("");
        jScrollPane1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setFont(new java.awt.Font("Monospaced", 0, 16)); // NOI18N
        jTextArea1.setLineWrap(true);
        jTextArea1.setRows(6);
        jTextArea1.setText("La programación funcional apareció como un paradigma independiente a principio de los años sesenta. Su creación se dio por las necesidades de los investigadores en el campo de la inteligencia artificial y en los campos secundarios del cálculo simbólico, pruebas de teoremas. sistemas basados en reglas y procesamiento del lenguaje natural.\nLa caracteristica principal de la programación funcional es que los cálculos se ven como una función (matemática) que hacen corresponder entradas y salidas. No hay noción de posición de memoria y, por tanto, no hay necesidad de una instrucción de asignación. Los bucles se modelan a través de la recursividad ya que no hay manera de aumentar o disminuir el valor de una variable. \nEn la práctica casi todos los lenguajes funcionales soportan el concepto de variable, asignación y bucle. Los lenguajes de Programación más representativos de la Programación Funcional son: Racket (antes Scheme) y Haskell. Otra característica a tener en cuenta es su definición de tipos de datos débil o nulo en ciertos casos. Podemos analizar la programación funcional desde el concepto de Función matemática, veamos: Toda función tiene una entrada, un cuerpo, una salida y lo que sale está relacionado de alguna manera con lo que entra.\nEjemplos:\nSumar, multiplicar, restar y dividir son funciones muy simples; entran dos números y sale otro al que llamamos resultado. La raíz cuadrada también es una función. Seno, coseno, y tangente, son funciones que se usan en la trigonometría.\nSi realizamos cada una de las funciones enunciadas en los ejemplos anteriores, veremos como se cumple el concepto de función, pues todas tienen una entrada, un cuerpo (aunque no lo conozcamos) y una salida.\nAsí mismo sucede en la programación funcional, existen muchas funciones ya definidas y nosotros podremos definir mas. Todas tienen una entrada y una salida, solo que les llamaremos de una manera distinta.\nContinuando con las bases matemáticas, vamos paso a paso como se construye una función: Lo primero que se debe hacer es darle un nombre. Matemáticamente el nombre más común es \"f\", pero en realidad puede dársele cualquier nombre, algo como \"madera\", si se prefiere. Luego debemos nombrar lo que va dentro de la función (parámetros). Se ponen entre paréntesis y van después del nombre de la función:\nAsi f(x) indica que la función se llama \"f\" y que \"x\" es un parámetro.\nUna función debe devolver un resultado: f(x)=x esto nos indica que la función \"Y\" toma a \"r\" y lo eleva al cubo.\nAhora tenemos que, si a la función f(x) le damos una entrada de \"2\" dará como resultado: 8.\nf(2)= 8\nBajo estas mismas nociones programaremos funcionalmente. Usamos nuestras propias\nfunciones dependiendo del problema que deseemos resolver, y aunque nuestras funciones tengan una notación diferente a la matemática, en esencia son lo mismo, ya que se rigen con los mismos principios. Podremos verlo a grandes rasgos en el siguiente capítulo.\n");
        jTextArea1.setEnabled(false);
        jScrollPane1.setViewportView(jTextArea1);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(30, 70, 800, 460);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Conceptos Fundamentales de la programacion funcional");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(60, 10, 670, 50);

        salir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Atras.png"))); // NOI18N
        salir.setBorderPainted(false);
        salir.setContentAreaFilled(false);
        salir.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        salir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salirActionPerformed(evt);
            }
        });
        jPanel1.add(salir);
        salir.setBounds(770, 540, 90, 60);

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Racket book image.jpeg"))); // NOI18N
        jPanel1.add(jLabel2);
        jLabel2.setBounds(0, 0, 860, 600);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 860, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void salirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_salirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FundamentosFuncional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FundamentosFuncional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FundamentosFuncional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FundamentosFuncional.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FundamentosFuncional().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    public javax.swing.JButton salir;
    // End of variables declaration//GEN-END:variables
}
